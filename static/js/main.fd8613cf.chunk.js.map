{"version":3,"sources":["assets/css/header.module.css","assets/images/a1.jpg","assets/images/a2.jpg","assets/images/a3.jpg","assets/images/a4.jpg","assets/css/answer.module.css","assets/images sync /^/.//.*$","components/Header.js","components/ListItem.js","components/Layout.js","components/Answer.js","components/Calculator.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","Header","useState","like","setLikes","isLiked","setLiked","Jumbotron","className","src","require","alt","styles","image","Button","color","onClick","disabled","icon","faHeart","Badge","ListItem","ListGroup","ListGroupItem","tag","href","action","Layout","Answer","classes","ans","imageName","isNaN","toFixed","Card","style","display","dis","CardImg","top","width","height","CardBody","CardTitle","CardText","CardSubtitle","Calculator","pvalue","setPvalue","avalue","setAvalue","gvalue","setGvalue","ivalue","setIvalue","nvalue","setNvalue","ansa","setAnsa","ansb","setAnsb","ansc","setAnsc","ansd","setAnsd","background","padding","Form","onSubmit","temp","preventDefault","temp3","FormGroup","row","Label","for","sm","Col","Input","type","name","placeholder","onChange","parseFloat","target","value","check","size","offset","to","textDecoration","App","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.fd8613cf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"image\":\"header_image__yGdQo\"};","module.exports = __webpack_public_path__ + \"static/media/a1.218aee3b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/a2.3ebdba2c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/a3.98b32c54.jpg\";","module.exports = __webpack_public_path__ + \"static/media/a4.0caf4ca8.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dis\":\"answer_dis__2q-jW\"};","var map = {\n\t\"./a1.jpg\": 21,\n\t\"./a2.jpg\": 22,\n\t\"./a3.jpg\": 23,\n\t\"./a4.jpg\": 24\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 43;","import React, {useState} from 'react'\nimport { Jumbotron, Button, Badge } from 'reactstrap';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faHeart } from '@fortawesome/free-solid-svg-icons'\nimport styles from '../assets/css/header.module.css'\nexport default function Header() {\n    const [like, setLikes] = useState(5);\n    const [isLiked, setLiked] = useState(false);\n\n    const likeHandler = () => {\n      setLikes(like+1);\n      setLiked(true);\n    }\n\n    return (\n      <div>\n        <Jumbotron className=\"container\">\n          <h1 className=\"display-3\">Hello, world!</h1>\n          <p className=\"lead\">\n            Just another project. Calculate following formulae of Engineering Economics real fast. Hope you like it.   \n          </p>\n          <hr className=\"my-2\" />\n          <div className=\"row\">\n            <div className=\"col-md-3 col-12\">\n            <img src={require(`../assets/images/a1.jpg`)} alt=\"ecoformula1\" className={styles.image}/>\n            </div>\n            <div className=\"col-md-3 col-12\">\n            <img src={require(`../assets/images/a2.jpg`)} alt=\"ecoformula1\" className={styles.image}/>\n            </div>\n            <div className=\"col-md-3 col-12\">\n            <img src={require(`../assets/images/a3.jpg`)} alt=\"ecoformula1\" className={styles.image}/>\n            </div>\n            <div className=\"col-md-3 col-12\">\n            <img src={require(`../assets/images/a4.jpg`)} alt=\"ecoformula1\" className={styles.image}/>\n            </div>\n          </div>\n          <p className=\"lead\">\n            <Button color=\"primary m-2\" onClick={likeHandler} disabled={isLiked}><FontAwesomeIcon icon={faHeart} />{isLiked ? ' Liked': ' Like'}</Button><Badge color=\"secondary\">{like}</Badge>\n          </p>\n        </Jumbotron>\n      </div>\n    );\n}\n","import React from 'react'\nimport { ListGroup, ListGroupItem } from 'reactstrap';\n\nexport default function ListItem() {\n    return (\n        <div className=\"container\">\n            <ListGroup>\n                {/* <ListGroupItem tag=\"a\" href=\"/first\" action>Future Worth Calculator using p,i,n</ListGroupItem>\n                <ListGroupItem tag=\"a\" href=\"/second\" action>Present Worth Calculator using a,i,n</ListGroupItem>\n                <ListGroupItem tag=\"a\" href=\"/third\" action>Future Worth Calculator using a,i,n</ListGroupItem>\n                <ListGroupItem tag=\"a\" href=\"/fourth\" action>Future Worth Calculator using g,i,n</ListGroupItem> */}\n                <ListGroupItem tag=\"a\" href=\"/calculator\" action> <strong>Go to Calculator</strong> </ListGroupItem>\n            </ListGroup>\n        </div>\n    )\n}\n","import React from 'react'\nimport Header from './Header'\nimport ListItem from './ListItem'\n\n\nexport default function Layout() {\n    return (\n        <div className=\"App\">\n            <Header />\n            <ListItem /> \n        </div>\n    )\n}\n","import React from 'react';\nimport {\n  Card, CardImg, CardText, CardBody,\n  CardTitle, CardSubtitle\n} from 'reactstrap';\n\nimport styles from '../assets/css/answer.module.css'\n\nexport default function Answer({ans, imageName}) {\n  let classes;\n    if (ans === null || ans === 0 || isNaN(ans)){\n      classes = 'none'\n    } else {\n      classes = 'flex'\n      ans = ans.toFixed(2)\n    }\n    return (\n      <Card style={{ display: classes }} className={styles.dis}>\n        <CardImg\n          top\n          width=\"100%\"\n          height=\"150px\"\n          src={require(`../assets/images/${imageName}`)}\n          alt=\"Card image cap\"\n        />\n        <CardBody>\n          <CardTitle>Economics Formulae</CardTitle>\n          <CardText>\n            The answer of the formula shown in above figure is:\n          </CardText>\n          <CardSubtitle><strong>Answer: {ans}</strong></CardSubtitle>\n        </CardBody>\n      </Card>\n    );\n}\n","import React, {useState} from 'react';\nimport {Link} from 'react-router-dom'\nimport { Col, Button, Form, FormGroup, Label, Input } from 'reactstrap';\nimport Answer from './Answer';\n\n\nexport default function Calculator() {\n    const [pvalue, setPvalue] = useState(null);\n    const [avalue, setAvalue] = useState(null);\n    const [gvalue, setGvalue] = useState(null);\n    const [ivalue, setIvalue] = useState(null);\n    const [nvalue, setNvalue] = useState(null);\n    const [ansa, setAnsa] = useState(null);\n    const [ansb, setAnsb] = useState(null);\n    const [ansc, setAnsc] = useState(null);\n    const [ansd, setAnsd] = useState(null);\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        let temp;\n        if (ivalue !==null && nvalue !==null){\n          temp = ivalue + 1;\n          temp = temp ** nvalue;\n          setAnsa(pvalue * temp);\n          let temp2 = (temp - 1) / (ivalue * temp);\n          setAnsb(avalue*temp2)\n          let temp3 = (temp - 1) / ivalue;\n          setAnsc(avalue*temp3);\n          let temp4 = (temp3 / ivalue) - (nvalue / ivalue);\n          setAnsd(gvalue * temp4)\n        }\n    }\n    return (\n      <>\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-8 m-auto bg-secondary p-4\">\n          <h5 style={{background: 'lightBlue', padding: '10px'}}>You don't have to fill every field.Just fill the field required in your formula.For e.g if you wanna calculate f = p*(i+1)^n just fill the pvalue, ivalue and nvalue</h5>\n          <Form onSubmit={submitHandler}>\n          <FormGroup row>\n            <Label for=\"form1\" sm={2}>\n              P value\n            </Label>\n            <Col sm={10}>\n              <Input\n                type=\"text\"\n                name=\"pvalue\"\n                id=\"form1\"\n                placeholder=\"Enter the value of P\"\n                onChange={(e) => setPvalue(parseFloat(e.target.value))}\n              />\n            </Col>\n          </FormGroup>\n          <FormGroup row>\n            <Label for=\"form4\" sm={2}>\n              A value\n            </Label>\n            <Col sm={10}>\n              <Input\n                type=\"text\"\n                name=\"avalue\"\n                id=\"form4\"\n                placeholder=\"Enter the value of A\"\n                onChange={(e) => setAvalue(parseFloat(e.target.value))}\n              />\n            </Col>\n          </FormGroup>\n          <FormGroup row>\n            <Label for=\"form5\" sm={2}>\n              G value\n            </Label>\n            <Col sm={10}>\n              <Input\n                type=\"text\"\n                name=\"gvalue\"\n                id=\"form5\"\n                placeholder=\"Enter the value of G\"\n                onChange={(e) => setGvalue(parseFloat(e.target.value))}\n              />\n            </Col>\n          </FormGroup>\n          <FormGroup row>\n            <Label for=\"form2\" sm={2}>\n              i value\n            </Label>\n            <Col sm={10}>\n              <Input\n                type=\"text\"\n                name=\"ivalue\"\n                id=\"form2\"\n                placeholder=\"Enter the value of i\"\n                onChange={(e) => setIvalue(parseFloat(e.target.value))}\n              />\n            </Col>\n          </FormGroup>\n          <FormGroup row>\n            <Label for=\"form3\" sm={2}>\n              n value\n            </Label>\n            <Col sm={10}>\n              <Input\n                type=\"text\"\n                name=\"nvalue\"\n                id=\"form3\"\n                placeholder=\"Enter the value of n\"\n                onChange={(e) => setNvalue(parseFloat(e.target.value))}\n              />\n            </Col>\n          </FormGroup>\n          <FormGroup check row>\n            <Col sm={{ size: 10, offset: 5 }}>\n              <Button>Submit</Button>\n            </Col>\n          </FormGroup>\n          <p>\n            <Link to=\"/\" style={{color: '#48cae4', textDecoration: 'none'}}>Go back</Link>\n          </p>\n        </Form>\n          </div>\n        </div>\n      </div>\n        \n        <Answer ans={ansa} imageName=\"a1.jpg\"/>\n        <Answer ans={ansb} imageName=\"a2.jpg\"/>\n        <Answer ans={ansc} imageName=\"a3.jpg\"/>\n        <Answer ans={ansd} imageName=\"a4.jpg\"/>\n      </>\n    );\n  }\n","import React from 'react';\nimport {BrowserRouter as Router, Route} from 'react-router-dom'\nimport './App.css';\nimport Layout from './components/Layout'\nimport Calculator from './components/Calculator'\n\nfunction App() {\n  return (\n      <Router>\n      <Route path=\"/\" exact component={Layout} />\n      <Route path=\"/calculator\" exact component={Calculator} />\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}